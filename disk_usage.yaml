To monitor the usage of the /dev/mapper/vg filesystem and send an alert when it reaches 90% usage, you can use the node_filesystem_free_bytes and node_filesystem_size_bytes metrics provided by Prometheus, assuming you have Prometheus set up for monitoring. Here's a step-by-step guide on how to do this:

Configure Prometheus:
Ensure that you have Prometheus installed and properly configured to collect filesystem metrics. You should have a Prometheus configuration file (prometheus.yml) that specifies the targets for monitoring.

In your prometheus.yml file, you should have a configuration like this to scrape node_exporter metrics, which includes filesystem metrics:

scrape_configs:
  - job_name: 'node'
    static_configs:
      - targets: ['localhost:9100']

Make sure that you have the node_exporter running on your nodes, providing the required filesystem metrics.

Define a Prometheus Alert Rule:
Create a Prometheus alert rule to trigger an alert when the filesystem usage reaches 90%. Create a new rule in your Prometheus configuration file or in a separate file, like alert.rules.yml. For example:

---

groups:
  - name: my-alerts
    rules:
      - alert: FilesystemUsageTooHigh
        expr: node_filesystem_free_bytes{device="/dev/mapper/vg"} / node_filesystem_size_bytes{device="/dev/mapper/vg"} * 100 < 10
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Filesystem usage is too high"
          description: "/dev/mapper/vg is almost full ({{ $value }}%)"

---

This rule checks if the percentage of free space on the /dev/mapper/vg filesystem is less than 10% (i.e., 90% usage) for at least 5 minutes.

Reload Prometheus Configuration:
After defining your alert rule, reload the Prometheus configuration to apply the changes. You can do this by sending a SIGHUP signal to the Prometheus process or restarting it.

Set Up Alertmanager:
If you haven't already, configure Prometheus to send alerts to Alertmanager. This usually involves adding a notification_config in your Prometheus configuration and starting the Alertmanager service.

Configure Alertmanager Alerts:
In your Alertmanager configuration, you can specify how alerts should be sent, such as via email, Slack, or other notification channels. Here's a simple example of Alertmanager configuration:

---

route:
  group_by: ['alertname']
  group_wait: 10s
  group_interval: 5m
  repeat_interval: 3h
  receiver: 'my-email'

receivers:
  - name: 'my-email'
    email_configs:
      - to: 'your-email@example.com'
        from: 'alertmanager@example.com'
        smarthost: 'smtp.example.com:587'
        auth_username: 'your-username'
        auth_identity: 'your-username'
        auth_password: 'your-password'

---

Adjust the Alertmanager configuration to your specific needs and the channels through which you want to receive alerts.

Test the Alert:
To test the alert, you can manually create a file or fill up the /dev/mapper/vg filesystem to trigger the alert condition. Prometheus should send an alert to Alertmanager, and Alertmanager will notify you through the configured channels.

Please make sure you have backups and proper monitoring practices in place before performing any tests that may fill up a filesystem, as running out of space can lead to system instability.

---

groups:
  - name: my-alerts
    rules:
      - alert: FilesystemUsageTooHigh
        expr: 100 - node_filesystem_free_bytes{device="/dev/mapper/vg"} / node_filesystem_size_bytes{device="/dev/mapper/vg"} * 100 > 90
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Filesystem usage is too high"
          description: "/dev/mapper/vg is {{ printf \"%0.2f\" (100 - node_filesystem_free_bytes{device=\"/dev/mapper/vg"} / node_filesystem_size_bytes{device=\"/dev/mapper/vg"} * 100) }}% full"

          description: "/dev/mapper/vg_data-rke2 is {{ printf \"%0.2f\" (100 - (node_filesystem_free_bytes{device=\"/dev/mapper/vg_data-rke2\"} / node_filesystem_size_bytes{device=\"/dev/mapper/vg_data-rke2\"}) * 100) }}% full"
